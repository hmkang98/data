mydir <- "c:/localtax/chinaland/"
mysubdir <- "images"

if (dir.exists(mydir)){
  setwd(file.path(mydir))
} else {
  dir.create(file.path(mydir))
  dir.create(file.path(mydir,mysubdir))
  setwd(file.path(mydir))
}

chinaland <- read.xlsx("c:/localtax/localtax.xlsx",4,encoding="UTF-8")
chinaland <- chinaland[][-1]
chinaland <- chinaland[-1:-4,]

ctotsmall1 <- chinaland[-1:-5,"상해"]
ctotsmall1 <- ts(ctotsmall1,start=1995,end=2017)
ctotsmall2 <- chinaland[-1:-10,"서장"]
ctotsmall2 <- ts(ctotsmall2,start=2000,end=2017)
ctotsmall3 <- chinaland[-1:-4,"섬서"]
ctotsmall3 <- ts(ctotsmall3,start=1994,end=2017)
ctotsmall4 <- chinaland[-1:-5,"녕하"]
ctotsmall4 <- ts(ctotsmall4,start=1995,end=2017)


chinaland <- chinaland[,-30]
chinaland <- chinaland[,-27]
chinaland <- chinaland[,-26]
chinaland <- chinaland[,-9]
chinaland <- ts(chinaland,start=1990,end=2017)
#pred <- data.frame(1:3,colnames(chinaland))

# 그래프 그리고 저장에 사용
win.graph()

# 예전 출력 삭제
sink("chinalandoutput.txt")
sink()
# 출력을 파일에 저장
sink("chinalandoutput.txt",append=T)
# 30개 성에 대한 작업시작
for (i in 1:27){
  # 성 이름 출력하고
  print(colnames(chinaland)[i])
  # 자동으로 모형을 계산한다.
  fit <- auto.arima(chinaland[,i],allowdrift = F)
  # 저장된 내용은 화면에 출력하고
  print(fit)
  # 2018년부터 3년 예측한다.
  pred <- predict(fit,n.ahead=3)
  print(pred$pred)
  cat(colnames(chinatot)[i]," 출력 끝================== \n\n")
  # 2017년까지 시계열을 그리고
  ts.plot(ts(c(chinaland[,i],pred$pred),start=1990),gpars=list(main=colnames(chinaland)[i]))
  # 2018년부터 예측값과 구간을 그린다.
  lines(pred$pred, col="red", type="o")
  lines(pred$pred+pred$se,col="blue",lty="dashed")
  lines(pred$pred-pred$se,col="blue",lty="dashed")  
  savePlot(filename=paste("images/chinaland",colnames(chinaland)[i],".png"),type="png")
}

# 자료가 적은 것은 별도로 제자
cat("상해\n")
fit <- auto.arima(ctotsmall1,allowdrift = F)
print(fit)
pred <- predict(fit,n.ahead=3)
print(pred$pred)
cat("상해 출력 끝================== \n\n")
ts.plot(ts(c(ctotsmall1,pred$pred),start=1995),gpars=list(main="상해"))
lines(pred$pred, col="red", type="o")
lines(pred$pred+pred$se,col="blue",lty="dashed")
lines(pred$pred-pred$se,col="blue",lty="dashed")  
savePlot(filename=paste("images/chinaland상해.png"),type="png")

cat("서장\n")
fit <- auto.arima(ctotsmall2)
print(fit)
pred <- predict(fit,n.ahead=3,allowdrift = F)
print(pred$pred)
cat("서장 출력 끝================== \n\n")
ts.plot(ts(c(ctotsmall2,pred$pred),start=2000),gpars=list(main="서장"))
lines(pred$pred, col="red", type="o")
lines(pred$pred+pred$se,col="blue",lty="dashed")
lines(pred$pred-pred$se,col="blue",lty="dashed")  
savePlot(filename=paste("images/chinaland서장.png"),type="png")

cat("섬서\n")
fit <- auto.arima(ctotsmall3,allowdrift = F)
print(fit)
pred <- predict(fit,n.ahead=3)
print(pred$pred)
cat("성서 출력 끝================== \n\n")
ts.plot(ts(c(ctotsmall3,pred$pred),start=1994),gpars=list(main="섬서"))
lines(pred$pred, col="red", type="o")
lines(pred$pred+pred$se,col="blue",lty="dashed")
lines(pred$pred-pred$se,col="blue",lty="dashed")  
savePlot(filename=paste("images/chinaland섬서.png"),type="png")

cat("녕하\n")
fit <- auto.arima(ctotsmall4,allowdrift = F)
print(fit)
pred <- predict(fit,n.ahead=3)
print(pred$pred)
cat("녕하 출력 끝================== \n\n")
ts.plot(ts(c(ctotsmall4,pred$pred),start=1995),gpars=list(main="녕하"))
lines(pred$pred, col="red", type="o")
lines(pred$pred+pred$se,col="blue",lty="dashed")
lines(pred$pred-pred$se,col="blue",lty="dashed")  
savePlot(filename=paste("images/chinaland녕하.png"),type="png")

#출력 내용 저장 종료
sink()
# 전체 그림
ts.plot(chinaland,gpars=list(xlab="years",ylab="성",lty=c(1:6),lwd=2,col=1:6))
savePlot("images/chinaland.png",type="png")
graphics.off()

